import OMT from "@surma/rollup-plugin-off-main-thread";
import react from "@vitejs/plugin-react";
import esbuild from "esbuild";
import fs from "fs";
import path from "path";
import { defineConfig } from "vite";

export default defineConfig({
  base: "./",
  plugins: [
    OMT(),
    react(),
    {
      name: "StaticFiles",
      async closeBundle() {
        [
          "node_modules/coi-serviceworker/coi-serviceworker.js",
          "node_modules/@wcrichto/rust-editor/dist/editor.worker.js",
        ].forEach(f => {
          fs.copyFileSync(f, path.join("dist", path.basename(f)));
        });

        /*
        The web workers generated by rust-editor are in ESM format, so they have
        `new URL(..., import.meta.url)` calls. This is important for Vite to 
        find the referenced and copy them into the output. However, some browsers
        like Firefox don't support ESM web workers. A hack that seems to work is just
        replacing all `import.meta.url` references with `self.location`.

        Note that has to happen in `closeBundle` and not `transform`, since if we
        make this change too soon, then Vite misses the URLs and doesn't copy the
        assets.
        */
        let assets = fs.readdirSync("dist/assets");
        ["ra-worker", "workerHelpers"].forEach(prefix => {
          let p = path.join(
            "dist/assets",
            assets.find(p => p.startsWith(prefix))!
          );
          let contents = fs.readFileSync(p, "utf-8");
          contents = contents.replace(/import\.meta\.url/g, `self.location`);
          fs.writeFileSync(p, contents);
        });
      },
    },
  ],
});
